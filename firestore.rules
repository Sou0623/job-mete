rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================================
    // ユーザープロフィール
    // ============================================================
    match /users/{userId}/profile {
      // 認証済み & 自分のデータのみアクセス可能
      allow read, write: if request.auth != null
                         && request.auth.uid == userId;
    }

    // ============================================================
    // 企業データ
    // ============================================================
    match /users/{userId}/companies/{companyId} {
      // 認証済み & 自分のデータのみアクセス可能
      allow read, write: if request.auth != null
                         && request.auth.uid == userId;

      // 作成時のバリデーション
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.companyName is string
                    && request.resource.data.normalizedName is string
                    && request.resource.data.analysis is map
                    && request.resource.data.createdAt is timestamp
                    && request.resource.data.updatedAt is timestamp;

      // 更新時のバリデーション（必須フィールドの型チェック）
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.companyName is string
                    && request.resource.data.normalizedName is string
                    && request.resource.data.updatedAt is timestamp;
    }

    // ============================================================
    // 予定データ
    // ============================================================
    match /users/{userId}/events/{eventId} {
      // 認証済み & 自分のデータのみアクセス可能
      allow read, write: if request.auth != null
                         && request.auth.uid == userId;

      // 作成時のバリデーション
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.companyId is string
                    && request.resource.data.date is timestamp
                    && request.resource.data.eventType is string
                    && request.resource.data.status is string
                    && request.resource.data.createdAt is timestamp
                    && request.resource.data.updatedAt is timestamp;

      // 更新時のバリデーション
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.companyId is string
                    && request.resource.data.date is timestamp
                    && request.resource.data.eventType is string
                    && request.resource.data.status is string
                    && request.resource.data.updatedAt is timestamp;
    }

    // ============================================================
    // 傾向分析データ
    // ============================================================
    match /users/{userId}/trends/{trendId} {
      // 読み取りのみ許可（自分のデータのみ）
      allow read: if request.auth != null
                  && request.auth.uid == userId;

      // 書き込みは Functions 経由のみ（クライアントからは不可）
      allow write: if false;
    }

    // ============================================================
    // 使用量データ
    // ============================================================
    match /users/{userId}/usage/{usageId} {
      // 読み取りのみ許可（自分のデータのみ）
      allow read: if request.auth != null
                  && request.auth.uid == userId;

      // 書き込みは Functions 経由のみ（クライアントからは不可）
      allow write: if false;
    }

    // ============================================================
    // デフォルト拒否ルール
    // ============================================================
    // 上記以外の全てのパスへのアクセスを拒否
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
